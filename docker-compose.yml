version: '3'

volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  default:

services:

  prometheus:
    image: prom/prometheus:latest
    depends_on:      
      - node_exporter
    restart: unless-stopped
    ports:
      - 9090:9090
    networks:
      - default
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=5d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    restart: unless-stopped
    ports:
      - 9100
    networks: 
      - default
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
  
  grafana:
    image: grafana/grafana:master
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - default
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards

    # env_file:
    #   - config.monitoring
